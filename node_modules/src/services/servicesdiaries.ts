import {DiaryEntry, NonSensitiveInfoDiaryEntry} from '../types';
import diaryData from './diaries.json';

const diaries: Array<DiaryEntry> = diaryData as Array<DiaryEntry>;

export const getEntries = () => diaries;

export const findById = (id:number):DiaryEntry | undefined => {
    const entry = diaries.find(d => d.id == id)
    if(entry){
        const { comment, ...restOfDiary }= entry
    }
    return restOfDiary;

}

return undefined;

export const getEntriesWhitouthSensitiveInfo = (): NonSensitiveInfoDiaryEntry[] => {
    return diaries.map(({id, date, weather, visibility}) => {
        return {
            id,
            date,
            weather,
            visibility,
        }
    })
} 



export const addDiary = (date: string, weather: weather, visibility: visibility, comment: string): DiaryEntry => {
    const newDiaryEntry = {
        id: Math.max(...diaries.map(d => d.id)) + 1,
        date,
        weather,
        visibility,
        comment
    }

    diaries.push(newDiaryEntry)
    return newDiaryEntry
}


